2025-04-17 12:53:59 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 23.0.2 with PID 5949 (/home/kuldeep/D/Case Study/E-Shopping_zone/UserService/target/classes started by kuldeep in /home/kuldeep/D/Case Study/E-Shopping_zone)
2025-04-17 12:53:59 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-17 12:54:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-17 12:54:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interface.
2025-04-17 12:54:00 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=972c56d5-b3a9-34f1-b3d3-db04441cf604
2025-04-17 12:54:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-04-17 12:54:01 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-04-17 12:54:01 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-17 12:54:01 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-17 12:54:01 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-17 12:54:01 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1924 ms
2025-04-17 12:54:01 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-17 12:54:01 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-17 12:54:01 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-17 12:54:01 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-17 12:54:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-17 12:54:02 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4edde05c
2025-04-17 12:54:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 12:54:02 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-17 12:54:02 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-04-17 12:54:02 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-17 12:54:03 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-17 12:54:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-17 12:54:03 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-17 12:54:03 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-04-17 12:54:03 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-17 12:54:05 INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-04-17 12:54:05 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-04-17 12:54:05 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-04-17 12:54:05 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-04-17 12:54:05 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-04-17 12:54:07 INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-04-17 12:54:07 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-04-17 12:54:07 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-04-17 12:54:07 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-04-17 12:54:07 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-04-17 12:54:07 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1744874647560 with initial instances count: 5
2025-04-17 12:54:07 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1744874647567, current=UP, previous=STARTING]
2025-04-17 12:54:07 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/localhost:UserService:8001: registering service...
2025-04-17 12:54:07 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-04-17 12:54:07 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-04-17 12:54:07 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/localhost:UserService:8001 - registration status: 204
2025-04-17 12:54:08 INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-04-17 12:54:08 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 10.744 seconds (process running for 11.594)
2025-04-17 12:59:07 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-04-17 13:04:07 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-04-17 13:09:07 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-04-17 13:09:42 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-17 13:09:42 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-17 13:09:42 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-17 13:09:42 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=kuldeepchaturvedi75@gmail.com, password=548423)]
2025-04-17 13:10:00 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@1848e983]
2025-04-17 13:10:00 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 288 ms | Response: <400 BAD_REQUEST Bad Request,User already exists with this email id,[]>
2025-04-17 13:11:13 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@5305ff94]
2025-04-17 13:11:37 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 24119 ms | Response: <201 CREATED Created,User Created With UserId 4 . Temporary password sent in your email.,[]>
2025-04-17 13:12:18 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=xiroce7552@dpcos.com, password=149959)]
2025-04-17 13:12:18 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 599 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9BRE1JTiIsInN1YiI6Inhpcm9jZTc1NTJAZHBjb3MuY29tIiwiaWF0IjoxNzQ0ODc1NzM4LCJleHAiOjE3NDQ4OTM3Mzh9.vVRaLumd29trGo57X8mfvpz8mlJ2IG8L2yyYSQiHEbU, role=ADMIN),[]>
2025-04-17 13:12:58 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.updatePassword(..) with args: [4, com.userservice.dto.PasswordDTO@4aab91bb]
2025-04-17 13:12:58 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.updatePassword(..) | Execution time: 334 ms | Response: <200 OK OK,Password updated successfully,[]>
2025-04-17 13:13:03 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=xiroce7552@dpcos.com, password=149959)]
2025-04-17 13:13:08 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=xiroce7552@dpcos.com, password=0)]
2025-04-17 13:13:09 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 602 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9BRE1JTiIsInN1YiI6Inhpcm9jZTc1NTJAZHBjb3MuY29tIiwiaWF0IjoxNzQ0ODc1Nzg5LCJleHAiOjE3NDQ4OTM3ODl9.2o8ZIixr8VGvwgWhi6-XiRT8m1j6qoy4t1HZpBPlhOc, role=ADMIN),[]>
2025-04-17 13:14:05 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-04-17 13:14:05 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1744875845010, current=DOWN, previous=UP]
2025-04-17 13:14:05 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/localhost:UserService:8001: registering service...
2025-04-17 13:14:05 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-17 13:14:05 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-17 13:14:05 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/USERSERVICE": localhost:8761 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/USERSERVICE": localhost:8761 failed to respond
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:8761 failed to respond
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:333)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:196)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.lambda$execute$0(InternalExecRuntime.java:236)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:791)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:233)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:120)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:198)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 21 more

2025-04-17 13:14:05 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/USERSERVICE": localhost:8761 failed to respond
2025-04-17 13:14:05 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/USERSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/USERSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 22 more

2025-04-17 13:14:05 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/USERSERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
2025-04-17 13:14:05 WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/localhost:UserService:8001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-17 13:14:05 WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-17 13:14:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-17 13:14:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-17 13:14:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-17 13:14:05 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-04-17 13:14:07 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-04-17 13:14:07 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/USERSERVICE/localhost:UserService:8001": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/USERSERVICE/localhost:UserService:8001": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 20 more

2025-04-17 13:14:07 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/USERSERVICE/localhost:UserService:8001": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
2025-04-17 13:14:07 ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/localhost:UserService:8001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-17 13:14:07 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:186)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 22 more

2025-04-17 13:14:07 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
2025-04-17 13:14:07 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:186)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 23 more

2025-04-17 13:14:07 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
2025-04-17 13:14:07 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/localhost:UserService:8001 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2025-04-17 13:14:08 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-04-17 13:14:08 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/USERSERVICE/localhost:UserService:8001": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/USERSERVICE/localhost:UserService:8001": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 38 more

2025-04-17 13:14:08 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/USERSERVICE/localhost:UserService:8001": Connect to http://localhost:8761 [localhost/127.0.0.1] failed: Connection refused
2025-04-17 13:14:08 ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/localhost:UserService:8001 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:745)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:702)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1401)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:661)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1394)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-17 13:14:08 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 19:21:07 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 4956 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 19:21:07 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 19:21:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 19:21:09 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 1 JPA repository interface.
2025-06-05 19:21:09 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 19:21:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 19:21:10 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 19:21:10 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 19:21:10 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 19:21:10 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 19:21:10 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2261 ms
2025-06-05 19:21:10 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 19:21:10 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 19:21:10 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 19:21:10 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 19:21:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 19:21:11 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63318b56
2025-06-05 19:21:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 19:21:11 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 19:21:11 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-05 19:21:11 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 19:21:12 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 19:21:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 19:21:13 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 19:21:13 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 19:21:13 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 19:21:14 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 19:21:14 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 19:21:14 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 19:21:14 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 19:21:15 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 19:21:15 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 19:21:15 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 19:21:15 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 19:21:15 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749131475920 with initial instances count: 1
2025-06-05 19:21:15 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749131475928, current=UP, previous=STARTING]
2025-06-05 19:21:15 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya.mshome.net:UserService:8001: registering service...
2025-06-05 19:21:15 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 19:21:15 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 19:21:15 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 8.807 seconds (process running for 9.701)
2025-06-05 19:21:15 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya.mshome.net:UserService:8001 - registration status: 204
2025-06-05 19:26:15 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 19:31:15 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 19:36:15 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 19:41:15 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:07:06 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 1296 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 20:07:06 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 20:07:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 20:07:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 135 ms. Found 1 JPA repository interface.
2025-06-05 20:07:08 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 20:07:09 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 20:07:09 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 20:07:09 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 20:07:09 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 20:07:09 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 20:07:09 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2491 ms
2025-06-05 20:07:09 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 20:07:09 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 20:07:09 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 20:07:09 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 20:07:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 20:07:10 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3211cc84
2025-06-05 20:07:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 20:07:10 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 20:07:10 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 20:07:11 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 20:07:11 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table user (
        user_id integer generated by default as identity,
        about varchar(255),
        date_of_birth timestamp(6),
        email_id varchar(255),
        full_name varchar(255),
        gender varchar(255),
        image varchar(255),
        mobile_number bigint,
        password varchar(255),
        role varchar(255) not null check (role in ('CUSTOMER','MERCHANT','ADMIN')),
        primary key (user_id)
    )" via JDBC [ERROR: syntax error at or near "user"
  Position: 20]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table user (
        user_id integer generated by default as identity,
        about varchar(255),
        date_of_birth timestamp(6),
        email_id varchar(255),
        full_name varchar(255),
        gender varchar(255),
        image varchar(255),
        mobile_number bigint,
        password varchar(255),
        role varchar(255) not null check (role in ('CUSTOMER','MERCHANT','ADMIN')),
        primary key (user_id)
    )" via JDBC [ERROR: syntax error at or near "user"
  Position: 20]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:316)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4467)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.userservice.UserServiceApplication.main(UserServiceApplication.java:12)
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "user"
  Position: 20
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2025-06-05 20:07:11 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists address 
       add constraint FKda8tuywtf0gb6sedwk7la1pgi 
       foreign key (user_id) 
       references user" via JDBC [ERROR: syntax error at or near "user"
  Position: 140]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists address 
       add constraint FKda8tuywtf0gb6sedwk7la1pgi 
       foreign key (user_id) 
       references user" via JDBC [ERROR: syntax error at or near "user"
  Position: 140]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:448)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:269)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4467)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.userservice.UserServiceApplication.main(UserServiceApplication.java:12)
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "user"
  Position: 140
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 130 common frames omitted
2025-06-05 20:07:11 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 20:07:11 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 20:07:12 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 20:07:12 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 20:07:12 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:07:12 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:07:12 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:07:12 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 20:07:13 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 20:07:13 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 20:07:13 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 20:07:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 20:07:13 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749134233689 with initial instances count: 5
2025-06-05 20:07:13 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749134233696, current=UP, previous=STARTING]
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 20:07:13 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 20:07:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 20:07:13 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 20:07:13 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.794 seconds (process running for 8.583)
2025-06-05 20:07:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 20:12:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:17:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:22:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:27:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:32:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:37:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:42:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:42:40 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 20:42:40 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 20:42:40 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2025-06-05 20:47:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:48:24 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=user@example.com, password=yourpassword)]
2025-06-05 20:48:24 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42703
2025-06-05 20:48:24 ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column u1_0.user_id does not exist
  Position: 25
2025-06-05 20:49:08 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 20:49:08 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749136748338, current=DOWN, previous=UP]
2025-06-05 20:49:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 20:49:08 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 20:49:08 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 20:49:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 20:49:08 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 20:49:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 20:49:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 20:49:08 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 20:49:11 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 20:49:11 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 20:49:11 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 20:49:15 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 7020 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 20:49:15 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 20:49:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 20:49:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 1 JPA repository interface.
2025-06-05 20:49:16 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 20:49:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 20:49:17 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 20:49:17 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 20:49:17 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 20:49:17 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 20:49:17 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2086 ms
2025-06-05 20:49:17 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 20:49:17 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 20:49:17 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 20:49:17 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 20:49:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 20:49:18 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d2eb7fa
2025-06-05 20:49:18 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 20:49:18 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 20:49:18 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 20:49:19 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 20:49:19 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table user (
        user_id integer generated by default as identity,
        about varchar(255),
        date_of_birth timestamp(6),
        email_id varchar(255),
        full_name varchar(255),
        gender varchar(255),
        image varchar(255),
        mobile_number bigint,
        password varchar(255),
        role varchar(255) not null check (role in ('CUSTOMER','MERCHANT','ADMIN')),
        primary key (user_id)
    )" via JDBC [ERROR: syntax error at or near "user"
  Position: 20]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table user (
        user_id integer generated by default as identity,
        about varchar(255),
        date_of_birth timestamp(6),
        email_id varchar(255),
        full_name varchar(255),
        gender varchar(255),
        image varchar(255),
        mobile_number bigint,
        password varchar(255),
        role varchar(255) not null check (role in ('CUSTOMER','MERCHANT','ADMIN')),
        primary key (user_id)
    )" via JDBC [ERROR: syntax error at or near "user"
  Position: 20]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:316)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4467)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.userservice.UserServiceApplication.main(UserServiceApplication.java:12)
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "user"
  Position: 20
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2025-06-05 20:49:19 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists address 
       add constraint FKda8tuywtf0gb6sedwk7la1pgi 
       foreign key (user_id) 
       references user" via JDBC [ERROR: syntax error at or near "user"
  Position: 140]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists address 
       add constraint FKda8tuywtf0gb6sedwk7la1pgi 
       foreign key (user_id) 
       references user" via JDBC [ERROR: syntax error at or near "user"
  Position: 140]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:448)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:269)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4467)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.userservice.UserServiceApplication.main(UserServiceApplication.java:12)
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "user"
  Position: 140
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 130 common frames omitted
2025-06-05 20:49:19 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 20:49:19 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 20:49:19 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 20:49:19 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 20:49:20 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:49:20 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:49:20 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:49:20 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 20:49:21 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 20:49:21 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 20:49:21 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 20:49:21 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 20:49:21 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749136761685 with initial instances count: 6
2025-06-05 20:49:21 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749136761694, current=UP, previous=STARTING]
2025-06-05 20:49:21 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 20:49:21 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 20:49:21 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 20:49:21 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.218 seconds (process running for 7.862)
2025-06-05 20:49:21 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 20:49:26 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 20:49:26 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 20:49:26 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-05 20:52:14 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@49b019f9]
2025-06-05 20:52:14 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42703
2025-06-05 20:52:14 ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column u1_0.user_id does not exist
  Position: 25
2025-06-05 20:52:20 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@46a03319]
2025-06-05 20:52:20 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42703
2025-06-05 20:52:20 ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column u1_0.user_id does not exist
  Position: 25
2025-06-05 20:54:21 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:55:59 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 20:55:59 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749137159524, current=DOWN, previous=UP]
2025-06-05 20:55:59 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 20:55:59 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 20:55:59 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 20:55:59 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 20:55:59 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 20:55:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 20:55:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 20:55:59 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 20:56:02 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 20:56:02 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 20:56:02 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 20:56:06 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 21360 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 20:56:06 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 20:56:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 20:56:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interface.
2025-06-05 20:56:07 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 20:56:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 20:56:08 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 20:56:08 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 20:56:08 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 20:56:08 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 20:56:08 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2209 ms
2025-06-05 20:56:08 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 20:56:08 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 20:56:09 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 20:56:09 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 20:56:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 20:56:09 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17dbca0a
2025-06-05 20:56:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 20:56:09 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 20:56:09 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 20:56:10 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 20:56:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 20:56:11 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 20:56:11 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 20:56:11 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 20:56:11 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:56:11 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:56:11 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 20:56:11 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 20:56:12 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 20:56:12 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 20:56:12 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 20:56:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 20:56:12 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749137172803 with initial instances count: 6
2025-06-05 20:56:12 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749137172811, current=UP, previous=STARTING]
2025-06-05 20:56:12 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 20:56:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 20:56:12 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 20:56:12 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.158 seconds (process running for 7.936)
2025-06-05 20:56:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 20:56:28 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 20:56:28 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 20:56:28 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-05 20:56:28 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@53e12b92]
2025-06-05 20:56:28 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 341 ms | Response: <201 CREATED Created,Something wrong, email could not be sent.,[]>
2025-06-05 21:01:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:02:15 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aditya@example.com, password=aditya@123)]
2025-06-05 21:02:28 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=aditya@123)]
2025-06-05 21:02:37 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=aditya@123)]
2025-06-05 21:03:59 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 21:03:59 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749137639545, current=DOWN, previous=UP]
2025-06-05 21:03:59 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:03:59 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 21:03:59 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 21:03:59 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:03:59 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:03:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 21:03:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 21:03:59 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 21:04:02 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 21:04:02 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 21:04:02 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 21:04:06 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 27424 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 21:04:06 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 21:04:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 21:04:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 1 JPA repository interface.
2025-06-05 21:04:07 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 21:04:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 21:04:08 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 21:04:08 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 21:04:08 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 21:04:08 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 21:04:08 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2242 ms
2025-06-05 21:04:08 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 21:04:08 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 21:04:08 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 21:04:09 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 21:04:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 21:04:09 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b2ff4df
2025-06-05 21:04:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 21:04:09 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 21:04:09 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 21:04:10 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 21:04:10 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table user (
        user_id integer generated by default as identity,
        about varchar(255),
        date_of_birth timestamp(6),
        email_id varchar(255),
        full_name varchar(255),
        gender varchar(255),
        image varchar(255),
        mobile_number bigint,
        password varchar(255),
        role varchar(255) not null check (role in ('CUSTOMER','MERCHANT','ADMIN')),
        primary key (user_id)
    )" via JDBC [ERROR: syntax error at or near "user"
  Position: 20]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table user (
        user_id integer generated by default as identity,
        about varchar(255),
        date_of_birth timestamp(6),
        email_id varchar(255),
        full_name varchar(255),
        gender varchar(255),
        image varchar(255),
        mobile_number bigint,
        password varchar(255),
        role varchar(255) not null check (role in ('CUSTOMER','MERCHANT','ADMIN')),
        primary key (user_id)
    )" via JDBC [ERROR: syntax error at or near "user"
  Position: 20]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:316)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4467)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.userservice.UserServiceApplication.main(UserServiceApplication.java:12)
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "user"
  Position: 20
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2025-06-05 21:04:10 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists address 
       add constraint FKda8tuywtf0gb6sedwk7la1pgi 
       foreign key (user_id) 
       references user" via JDBC [ERROR: syntax error at or near "user"
  Position: 140]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists address 
       add constraint FKda8tuywtf0gb6sedwk7la1pgi 
       foreign key (user_id) 
       references user" via JDBC [ERROR: syntax error at or near "user"
  Position: 140]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:448)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:269)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1711)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4467)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.userservice.UserServiceApplication.main(UserServiceApplication.java:12)
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "user"
  Position: 140
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 130 common frames omitted
2025-06-05 21:04:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:04:10 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 21:04:10 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 21:04:10 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 21:04:11 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:04:11 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:04:11 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:04:11 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 21:04:12 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 21:04:12 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 21:04:12 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 21:04:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 21:04:12 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749137652615 with initial instances count: 6
2025-06-05 21:04:12 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749137652621, current=UP, previous=STARTING]
2025-06-05 21:04:12 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:04:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 21:04:12 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 21:04:12 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.198 seconds (process running for 7.868)
2025-06-05 21:04:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:04:33 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 21:04:33 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 21:04:33 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-05 21:04:33 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@49645eca]
2025-06-05 21:04:33 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42703
2025-06-05 21:04:33 ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column u1_0.user_id does not exist
  Position: 25
2025-06-05 21:08:40 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 21:08:40 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749137920097, current=DOWN, previous=UP]
2025-06-05 21:08:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:08:40 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 21:08:40 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 21:08:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:08:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:08:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 21:08:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 21:08:40 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 21:08:43 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 21:08:43 WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2025-06-05 21:08:43 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 21:08:43 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 21:08:46 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 12872 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 21:08:46 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 21:08:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 21:08:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 177 ms. Found 1 JPA repository interface.
2025-06-05 21:08:48 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 21:08:48 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 21:08:48 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 21:08:48 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 21:08:48 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 21:08:48 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 21:08:48 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2208 ms
2025-06-05 21:08:49 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 21:08:49 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 21:08:49 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 21:08:49 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 21:08:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 21:08:49 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3211cc84
2025-06-05 21:08:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 21:08:49 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 21:08:49 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 21:08:50 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 21:08:50 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:08:51 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 21:08:51 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 21:08:51 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 21:08:51 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:08:51 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:08:51 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:08:52 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 21:08:52 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 21:08:52 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 21:08:52 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 21:08:52 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 21:08:52 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 21:08:53 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 21:08:53 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 21:08:53 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 21:08:53 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749137933358 with initial instances count: 6
2025-06-05 21:08:53 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 21:08:53 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749137933365, current=UP, previous=STARTING]
2025-06-05 21:08:53 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 21:08:53 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:08:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 21:08:53 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 21:08:53 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.428 seconds (process running for 8.039)
2025-06-05 21:08:53 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:08:57 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 21:08:57 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 21:08:57 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-06-05 21:08:57 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@767b8d19]
2025-06-05 21:08:58 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 338 ms | Response: <201 CREATED Created,Something wrong, email could not be sent.,[]>
2025-06-05 21:10:05 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@29111718]
2025-06-05 21:10:05 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 248 ms | Response: <201 CREATED Created,Something wrong, email could not be sent.,[]>
2025-06-05 21:11:39 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 21:11:39 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749138099286, current=DOWN, previous=UP]
2025-06-05 21:11:39 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:11:39 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 21:11:39 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:11:39 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 21:11:39 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:11:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 21:11:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 21:11:39 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 21:11:42 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 21:11:42 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 21:11:42 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 21:11:45 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 10828 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 21:11:45 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 21:11:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 21:11:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interface.
2025-06-05 21:11:47 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 21:11:47 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 21:11:47 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 21:11:47 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 21:11:47 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 21:11:47 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 21:11:47 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1988 ms
2025-06-05 21:11:47 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 21:11:47 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 21:11:47 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 21:11:48 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 21:11:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 21:11:48 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3211cc84
2025-06-05 21:11:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 21:11:48 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 21:11:48 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 21:11:49 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 21:11:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:11:50 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 21:11:50 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 21:11:50 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 21:11:50 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:11:50 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:11:50 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:11:50 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 21:11:51 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 21:11:51 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 21:11:51 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 21:11:51 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 21:11:51 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749138111947 with initial instances count: 6
2025-06-05 21:11:51 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749138111955, current=UP, previous=STARTING]
2025-06-05 21:11:51 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 21:11:51 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:11:51 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 21:11:51 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 21:11:51 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 6.943 seconds (process running for 7.595)
2025-06-05 21:11:52 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:11:55 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 21:11:55 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 21:11:55 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-05 21:11:55 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@3c418389]
2025-06-05 21:11:55 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 344 ms | Response: <201 CREATED Created,Something wrong, email could not be sent.,[]>
2025-06-05 21:14:00 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@5843d959]
2025-06-05 21:14:01 WARN  o.s.c.l.core.RoundRobinLoadBalancer - No servers available for service: NOTIFICATIONSERVICE
2025-06-05 21:14:01 WARN  o.s.c.o.l.FeignBlockingLoadBalancerClient - Load balancer does not contain an instance for the service NOTIFICATIONSERVICE
2025-06-05 21:14:01 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 377 ms | Response: <201 CREATED Created,Something wrong, email could not be sent.,[]>
2025-06-05 21:16:51 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:21:51 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:26:45 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@5b038f55]
2025-06-05 21:26:51 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:26:52 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 7199 ms | Response: <201 CREATED Created,User Created With UserId 1 . Temporary password sent in your email.,[]>
2025-06-05 21:27:37 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@774488e6]
2025-06-05 21:27:46 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 8454 ms | Response: <201 CREATED Created,User Created With UserId 2 . Temporary password sent in your email.,[]>
2025-06-05 21:32:02 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m13s858ms626µs700ns).
2025-06-05 21:32:35 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:35:18 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=800346)]
2025-06-05 21:37:35 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:37:55 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=800346)]
2025-06-05 21:37:56 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=800346)]
2025-06-05 21:39:35 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=800346)]
2025-06-05 21:42:35 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:47:35 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:47:57 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 21:47:57 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749140277654, current=DOWN, previous=UP]
2025-06-05 21:47:57 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:47:57 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 21:47:57 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 21:47:57 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:47:57 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:47:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 21:47:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 21:47:57 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 21:48:00 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 21:48:00 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 21:48:00 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 21:54:30 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 24520 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 21:54:30 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 21:54:32 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 21:54:32 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 1 JPA repository interface.
2025-06-05 21:54:32 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 21:54:33 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 21:54:33 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 21:54:33 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 21:54:33 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 21:54:33 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 21:54:33 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2407 ms
2025-06-05 21:54:33 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 21:54:33 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 21:54:33 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 21:54:34 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 21:54:34 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 21:54:34 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52a74328
2025-06-05 21:54:34 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 21:54:34 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 21:54:34 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 21:54:35 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 21:54:35 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:54:36 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 21:54:36 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 21:54:36 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 21:54:36 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:54:36 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:54:36 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:54:37 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 21:54:37 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 21:54:37 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 21:54:37 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 21:54:37 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 21:54:37 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 21:54:38 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 21:54:38 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 21:54:38 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 21:54:38 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749140678138 with initial instances count: 6
2025-06-05 21:54:38 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 21:54:38 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749140678148, current=UP, previous=STARTING]
2025-06-05 21:54:38 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 21:54:38 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:54:38 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 21:54:38 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 21:54:38 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 8.077 seconds (process running for 8.738)
2025-06-05 21:54:38 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:56:16 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 21:56:16 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 21:56:16 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-05 21:59:14 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 21:59:14 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749140954891, current=DOWN, previous=UP]
2025-06-05 21:59:14 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:59:14 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 21:59:14 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 21:59:14 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:59:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 21:59:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 21:59:14 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 21:59:14 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:59:14 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 21:59:14 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 21:59:14 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 21:59:18 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 788 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 21:59:18 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 21:59:19 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 21:59:19 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 1 JPA repository interface.
2025-06-05 21:59:19 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 21:59:20 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 21:59:20 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 21:59:20 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 21:59:20 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 21:59:20 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 21:59:20 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2126 ms
2025-06-05 21:59:20 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 21:59:20 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 21:59:20 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 21:59:21 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 21:59:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 21:59:21 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c29b0dc
2025-06-05 21:59:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 21:59:21 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 21:59:21 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 21:59:22 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 21:59:22 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:59:23 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 21:59:23 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 21:59:23 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 21:59:23 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:59:23 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:59:23 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 21:59:24 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 21:59:24 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 21:59:24 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 21:59:24 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 21:59:24 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 21:59:24 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 21:59:25 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 21:59:25 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 21:59:25 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 21:59:25 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749140965151 with initial instances count: 6
2025-06-05 21:59:25 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 21:59:25 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749140965160, current=UP, previous=STARTING]
2025-06-05 21:59:25 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:59:25 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 21:59:25 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 21:59:25 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 21:59:25 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.461 seconds (process running for 8.095)
2025-06-05 21:59:25 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:59:38 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 21:59:38 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 21:59:38 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-05 21:59:51 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 21:59:51 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749140991457, current=DOWN, previous=UP]
2025-06-05 21:59:51 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 21:59:51 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 21:59:51 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 21:59:51 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 21:59:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 21:59:51 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 21:59:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 21:59:51 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 21:59:54 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 21:59:54 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 21:59:54 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-05 21:59:58 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 25760 (C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shopping_Zone)
2025-06-05 21:59:58 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-05 21:59:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-05 21:59:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 162 ms. Found 1 JPA repository interface.
2025-06-05 22:00:00 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-05 22:00:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-05 22:00:01 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-05 22:00:01 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-05 22:00:01 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-05 22:00:01 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-05 22:00:01 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2778 ms
2025-06-05 22:00:01 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-05 22:00:01 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-05 22:00:01 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-05 22:00:02 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-05 22:00:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-05 22:00:02 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4af606e9
2025-06-05 22:00:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-05 22:00:02 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-05 22:00:02 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-05 22:00:03 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-05 22:00:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 22:00:04 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-05 22:00:04 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-05 22:00:04 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-05 22:00:04 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 22:00:04 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 22:00:04 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-05 22:00:05 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-05 22:00:05 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-05 22:00:05 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-05 22:00:06 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-05 22:00:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-05 22:00:06 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749141006688 with initial instances count: 7
2025-06-05 22:00:06 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749141006700, current=UP, previous=STARTING]
2025-06-05 22:00:06 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 22:00:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-05 22:00:06 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-05 22:00:06 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 9.237 seconds (process running for 9.94)
2025-06-05 22:00:06 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 22:00:31 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-05 22:00:31 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-05 22:00:31 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-05 22:00:53 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@6efd9eb5]
2025-06-05 22:01:00 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 7368 ms | Response: <201 CREATED Created,User Created With UserId 3 . Temporary password sent in your email.,[]>
2025-06-05 22:01:46 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aditya.sharma@example.com, password=681562)]
2025-06-05 22:01:46 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 764 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9DVVNUT01FUiIsInN1YiI6ImFkaXR5YS5zaGFybWFAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDkxNDExMDYsImV4cCI6MTc0OTE1OTEwNn0.6VFLTmtl96WKJR0DXHxUH86rk5o-9rn1Y_nBHSAAzNY, role=CUSTOMER),[]>
2025-06-05 22:05:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:10:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:15:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:20:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:25:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:30:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:35:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:40:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:45:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:50:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 22:55:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:00:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:05:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:10:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:15:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:19:36 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@5d9eb28e]
2025-06-05 23:19:36 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 294 ms | Response: <400 BAD_REQUEST Bad Request,User already exists with this email id,[]>
2025-06-05 23:20:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:25:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:28:19 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@117e7597]
2025-06-05 23:28:26 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 7166 ms | Response: <201 CREATED Created,Something wrong, email could not be sent.,[]>
2025-06-05 23:30:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:31:20 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@206b5e28]
2025-06-05 23:31:27 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 7238 ms | Response: <201 CREATED Created,User Created With UserId 4 . Temporary password sent in your email.,[]>
2025-06-05 23:33:07 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=926003)]
2025-06-05 23:33:32 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aaditya@example.com, password=926003)]
2025-06-05 23:34:11 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@45b2a2fc]
2025-06-05 23:34:12 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 248 ms | Response: <400 BAD_REQUEST Bad Request,User already exists with this email id,[]>
2025-06-05 23:35:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:35:51 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=yourPassword)]
2025-06-05 23:36:15 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=926003)]
2025-06-05 23:39:23 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=926003)]
2025-06-05 23:39:31 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aaditya@example.com, password=926003)]
2025-06-05 23:40:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:40:15 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aaditya.sharma@example.com, password=681562)]
2025-06-05 23:40:29 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aditya.sharma@example.com, password=681562)]
2025-06-05 23:40:30 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 517 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9DVVNUT01FUiIsInN1YiI6ImFkaXR5YS5zaGFybWFAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDkxNDcwMzAsImV4cCI6MTc0OTE2NTAzMH0.Yx3mYOGfvWdrj506RmoxpJIZTtgOamgaFx5bLO6K_cA, role=CUSTOMER),[]>
2025-06-05 23:40:45 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=926003)]
2025-06-05 23:40:50 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aditya@example.com, password=926003)]
2025-06-05 23:40:56 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aaditya@example.com, password=926003)]
2025-06-05 23:41:30 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aditya.sharma@example.com, password=681562)]
2025-06-05 23:41:31 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 510 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9DVVNUT01FUiIsInN1YiI6ImFkaXR5YS5zaGFybWFAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDkxNDcwOTEsImV4cCI6MTc0OTE2NTA5MX0.Zctr57ENJMB5T2mh2x8sVo75ojIZ8oXKNJP8SyJ3TQQ, role=CUSTOMER),[]>
2025-06-05 23:42:35 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@b63ead8]
2025-06-05 23:42:44 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 9433 ms | Response: <201 CREATED Created,User Created With UserId 5 . Temporary password sent in your email.,[]>
2025-06-05 23:43:23 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=901760)]
2025-06-05 23:43:31 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=aman.verma@example.com, password=901760)]
2025-06-05 23:43:31 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 513 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9DVVNUT01FUiIsInN1YiI6ImFtYW4udmVybWFAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDkxNDcyMTEsImV4cCI6MTc0OTE2NTIxMX0.vG2nW6BYqFlOVHDMCAX2_7TSUZzbQmivWlzOAHzB1x0, role=CUSTOMER),[]>
2025-06-05 23:45:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:50:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:55:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-05 23:55:27 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-05 23:55:27 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749147927511, current=DOWN, previous=UP]
2025-06-05 23:55:27 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-05 23:55:27 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-05 23:55:27 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-05 23:55:27 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-05 23:55:27 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-05 23:55:27 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-05 23:55:27 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-05 23:55:27 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-05 23:55:30 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-05 23:55:30 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-05 23:55:30 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-06 10:36:11 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.7 with PID 28660 (C:\Users\adityarg\Desktop\E-Shopping_Zone\UserService\target\classes started by adityarg in C:\Users\adityarg\Desktop\E-Shopping_Zone)
2025-06-06 10:36:11 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-06 10:36:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-06 10:36:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197 ms. Found 1 JPA repository interface.
2025-06-06 10:36:13 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b4fbfe29-0ba9-33ef-9da9-1a63b7956642
2025-06-06 10:36:14 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-06 10:36:14 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-06 10:36:14 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-06 10:36:14 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-06 10:36:14 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-06 10:36:14 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3203 ms
2025-06-06 10:36:14 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-06 10:36:14 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-06 10:36:14 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-06 10:36:15 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-06 10:36:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-06 10:36:15 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5296f00c
2025-06-06 10:36:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-06 10:36:15 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-06 10:36:15 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-06 10:36:17 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-06 10:36:17 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-06 10:36:18 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-06 10:36:18 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-06 10:36:18 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-06 10:36:18 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-06 10:36:18 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-06 10:36:18 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-06 10:36:19 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-06 10:36:20 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-06 10:36:20 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-06 10:36:20 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-06 10:36:20 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-06 10:36:20 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749186380974 with initial instances count: 4
2025-06-06 10:36:20 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749186380984, current=UP, previous=STARTING]
2025-06-06 10:36:20 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-06 10:36:20 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/10.236.6.247:UserService:8001: registering service...
2025-06-06 10:36:21 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-06 10:36:21 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-06 10:36:21 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 10.939 seconds (process running for 11.885)
2025-06-06 10:36:21 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/10.236.6.247:UserService:8001 - registration status: 204
2025-06-06 10:41:20 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 10:41:36 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-06 10:41:36 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-06 10:41:36 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-06 10:41:36 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@5459e19a]
2025-06-06 10:41:42 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 5577 ms | Response: <201 CREATED Created,User Created With UserId 1 . Temporary password sent in your email.,[]>
2025-06-06 10:46:20 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 10:51:20 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 10:56:20 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 11:35:05 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=34m19s613ms172µs900ns).
2025-06-06 11:35:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 11:40:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 11:45:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 11:45:37 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=wertyui)]
2025-06-06 11:45:58 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=null)]
2025-06-06 11:47:03 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=915883)]
2025-06-06 11:47:09 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=rajgupta49102@gmail.com, password=915883)]
2025-06-06 11:47:10 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 1026 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9DVVNUT01FUiIsInN1YiI6InJhamd1cHRhNDkxMDJAZ21haWwuY29tIiwiaWF0IjoxNzQ5MTkwNjMwLCJleHAiOjE3NDkyMDg2MzB9.xTF4YkltzVrXeezvMibRw5Hyna-zh1up0P8w91DivjM, role=CUSTOMER),[]>
2025-06-06 11:49:53 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=null)]
2025-06-06 11:50:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 11:55:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:00:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:05:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:10:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:15:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:20:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:25:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:30:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:35:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:40:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:45:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:50:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 12:52:23 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [anonymousUser]
2025-06-06 12:52:23 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 58 ms | Response: null
2025-06-06 12:55:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:00:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:05:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:10:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:15:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:20:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:24:40 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [anonymousUser]
2025-06-06 13:24:40 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 12 ms | Response: null
2025-06-06 13:25:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:25:13 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [anonymousUser]
2025-06-06 13:25:13 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 5 ms | Response: null
2025-06-06 13:30:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:35:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:40:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:45:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:50:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 13:55:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:00:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:05:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:07:38 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [anonymousUser]
2025-06-06 14:07:38 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 62 ms | Response: null
2025-06-06 14:07:49 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [anonymousUser]
2025-06-06 14:07:49 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 3 ms | Response: null
2025-06-06 14:08:26 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [anonymousUser]
2025-06-06 14:08:26 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 4 ms | Response: null
2025-06-06 14:10:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:15:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:20:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:25:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:30:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:35:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:40:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:45:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:50:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 14:55:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 15:00:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 15:05:12 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-06 15:06:31 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-06 15:06:31 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749202591352, current=DOWN, previous=UP]
2025-06-06 15:06:31 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/10.236.6.247:UserService:8001: registering service...
2025-06-06 15:06:31 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/10.236.6.247:UserService:8001 - registration status: 204
2025-06-06 15:06:31 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-06 15:06:31 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-06 15:06:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-06 15:06:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-06 15:06:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-06 15:06:31 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-06 15:06:34 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-06 15:06:34 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/10.236.6.247:UserService:8001 - deregister  status: 200
2025-06-06 15:06:34 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-07 14:17:25 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 28324 (C:\Users\rajgu\OneDrive\Desktop\E-Shop-master\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shop-master)
2025-06-07 14:17:25 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-07 14:17:26 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-07 14:17:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 182 ms. Found 1 JPA repository interface.
2025-06-07 14:17:27 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a1953092-59c7-3cc6-ba09-e816bd743068
2025-06-07 14:17:28 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-07 14:17:28 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-07 14:17:28 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-07 14:17:28 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-07 14:17:28 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-07 14:17:28 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3029 ms
2025-06-07 14:17:29 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-07 14:17:29 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-07 14:17:29 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-07 14:17:29 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-07 14:17:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-07 14:17:30 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@455d04d2
2025-06-07 14:17:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-07 14:17:30 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-07 14:17:30 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-07 14:17:31 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-07 14:17:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 14:17:32 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-07 14:17:32 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-07 14:17:32 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-07 14:17:32 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:17:32 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:17:32 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:17:33 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-07 14:17:33 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-07 14:17:33 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-07 14:17:33 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-07 14:17:33 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-07 14:17:33 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-07 14:17:34 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-07 14:17:34 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-07 14:17:34 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-07 14:17:34 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749286054382 with initial instances count: 2
2025-06-07 14:17:34 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-07 14:17:34 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749286054392, current=UP, previous=STARTING]
2025-06-07 14:17:34 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 14:17:34 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-07 14:17:34 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-07 14:17:34 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-07 14:17:34 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 9.873 seconds (process running for 11.005)
2025-06-07 14:17:34 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 14:22:33 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:23:21 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-07 14:23:21 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-07 14:23:21 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-07 14:23:21 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@1a4725e5]
2025-06-07 14:23:21 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 221 ms | Response: <500 INTERNAL_SERVER_ERROR Internal Server Error,Something went wrong, email could not be sent.,[]>
2025-06-07 14:27:33 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:32:33 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:37:33 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:42:33 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:47:28 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-07 14:47:28 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749287848574, current=DOWN, previous=UP]
2025-06-07 14:47:28 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 14:47:28 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-07 14:47:28 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-07 14:47:28 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 14:47:28 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 14:47:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-07 14:47:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-07 14:47:28 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-07 14:47:31 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-07 14:47:31 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-07 14:47:31 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-07 14:47:35 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 23232 (C:\Users\rajgu\OneDrive\Desktop\E-Shop-master\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shop-master)
2025-06-07 14:47:35 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-07 14:47:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-07 14:47:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 1 JPA repository interface.
2025-06-07 14:47:37 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a1953092-59c7-3cc6-ba09-e816bd743068
2025-06-07 14:47:38 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-07 14:47:38 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-07 14:47:38 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-07 14:47:38 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-07 14:47:38 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-07 14:47:38 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2493 ms
2025-06-07 14:47:38 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-07 14:47:38 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-07 14:47:38 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-07 14:47:39 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-07 14:47:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-07 14:47:39 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@455d04d2
2025-06-07 14:47:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-07 14:47:39 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-07 14:47:39 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-07 14:47:40 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-07 14:47:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 14:47:41 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-07 14:47:41 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-07 14:47:41 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-07 14:47:41 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:47:41 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:47:41 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:47:41 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-07 14:47:42 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-07 14:47:42 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-07 14:47:42 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-07 14:47:42 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-07 14:47:42 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749287862888 with initial instances count: 3
2025-06-07 14:47:42 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749287862897, current=UP, previous=STARTING]
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 14:47:42 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-07 14:47:42 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-07 14:47:42 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-07 14:47:42 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.827 seconds (process running for 8.483)
2025-06-07 14:47:42 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 14:48:18 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-07 14:48:18 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-07 14:48:18 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-07 14:48:18 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@24d1c5b8]
2025-06-07 14:48:18 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 112 ms | Response: <500 INTERNAL_SERVER_ERROR Internal Server Error,Something went wrong, email could not be sent.,[]>
2025-06-07 14:50:26 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-07 14:50:26 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749288026034, current=DOWN, previous=UP]
2025-06-07 14:50:26 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 14:50:26 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-07 14:50:26 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 14:50:26 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-07 14:50:26 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 14:50:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-07 14:50:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-07 14:50:26 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-07 14:50:29 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-07 14:50:29 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-07 14:50:29 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-07 14:50:33 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 15520 (C:\Users\rajgu\OneDrive\Desktop\E-Shop-master\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shop-master)
2025-06-07 14:50:33 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-07 14:50:34 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-07 14:50:34 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 1 JPA repository interface.
2025-06-07 14:50:34 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a1953092-59c7-3cc6-ba09-e816bd743068
2025-06-07 14:50:35 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-07 14:50:35 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-07 14:50:35 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-07 14:50:35 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-07 14:50:35 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-07 14:50:35 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2273 ms
2025-06-07 14:50:36 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-07 14:50:36 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-07 14:50:36 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-07 14:50:36 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-07 14:50:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-07 14:50:36 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@998fbd4
2025-06-07 14:50:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-07 14:50:36 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-07 14:50:36 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-07 14:50:37 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-07 14:50:37 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 14:50:38 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-07 14:50:38 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-07 14:50:38 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-07 14:50:38 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:50:38 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:50:38 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:50:39 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-07 14:50:39 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-07 14:50:39 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-07 14:50:39 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-07 14:50:39 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-07 14:50:39 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-07 14:50:40 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-07 14:50:40 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-07 14:50:40 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-07 14:50:40 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749288040227 with initial instances count: 2
2025-06-07 14:50:40 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-07 14:50:40 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749288040235, current=UP, previous=STARTING]
2025-06-07 14:50:40 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-07 14:50:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 14:50:40 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-07 14:50:40 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-07 14:50:40 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.551 seconds (process running for 8.336)
2025-06-07 14:50:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 14:51:16 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-07 14:51:16 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-07 14:51:16 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-07 14:51:16 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@3084e82b]
2025-06-07 14:51:16 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 110 ms | Response: <400 BAD_REQUEST Bad Request,Password must not be null or empty,[]>
2025-06-07 14:53:32 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-07 14:53:32 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749288212783, current=DOWN, previous=UP]
2025-06-07 14:53:32 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 14:53:32 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-07 14:53:32 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-07 14:53:32 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 14:53:32 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 14:53:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-07 14:53:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-07 14:53:32 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-07 14:53:35 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-07 14:53:35 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-07 14:53:35 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-07 14:53:39 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 1244 (C:\Users\rajgu\OneDrive\Desktop\E-Shop-master\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shop-master)
2025-06-07 14:53:39 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-07 14:53:40 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-07 14:53:40 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 1 JPA repository interface.
2025-06-07 14:53:40 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a1953092-59c7-3cc6-ba09-e816bd743068
2025-06-07 14:53:41 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-07 14:53:41 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-07 14:53:41 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-07 14:53:41 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-07 14:53:41 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-07 14:53:41 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1997 ms
2025-06-07 14:53:41 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-07 14:53:41 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-07 14:53:42 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-07 14:53:42 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-07 14:53:42 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-07 14:53:42 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5016f1a
2025-06-07 14:53:42 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-07 14:53:42 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-07 14:53:42 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-07 14:53:43 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-07 14:53:43 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 14:53:43 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-07 14:53:44 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-07 14:53:44 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-07 14:53:44 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:53:44 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:53:44 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 14:53:44 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-07 14:53:45 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-07 14:53:45 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-07 14:53:45 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-07 14:53:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-07 14:53:45 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749288225973 with initial instances count: 3
2025-06-07 14:53:45 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749288225980, current=UP, previous=STARTING]
2025-06-07 14:53:45 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-07 14:53:45 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 14:53:45 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-07 14:53:46 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-07 14:53:46 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.032 seconds (process running for 7.633)
2025-06-07 14:53:46 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 14:53:50 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-07 14:53:50 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-07 14:53:50 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-07 14:53:50 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@6f4d58d8]
2025-06-07 14:53:51 WARN  o.s.c.l.core.RoundRobinLoadBalancer - No servers available for service: NOTIFICATIONSERVICE
2025-06-07 14:53:51 WARN  o.s.c.o.l.FeignBlockingLoadBalancerClient - Load balancer does not contain an instance for the service NOTIFICATIONSERVICE
2025-06-07 14:53:51 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 589 ms | Response: <500 INTERNAL_SERVER_ERROR Internal Server Error,Something went wrong, email could not be sent.,[]>
2025-06-07 14:53:56 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@702e1004]
2025-06-07 14:53:56 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 14 ms | Response: <400 BAD_REQUEST Bad Request,User already exists with this email id,[]>
2025-06-07 14:54:25 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=172839)]
2025-06-07 14:54:36 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=merchant@example.com, password=172839)]
2025-06-07 14:54:37 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 795 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9NRVJDSEFOVCIsInN1YiI6Im1lcmNoYW50QGV4YW1wbGUuY29tIiwiaWF0IjoxNzQ5Mjg4Mjc3LCJleHAiOjE3NDkzMDYyNzd9.7lUWqGeTWcpW5-_Ix3rKKbR8iyo2hsGFcW7ttH5yCLw, role=MERCHANT),[]>
2025-06-07 14:56:49 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@42ed3db4]
2025-06-07 14:56:56 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 7055 ms | Response: <201 CREATED Created,User created successfully with UserId 7. Registration success email sent.,[]>
2025-06-07 14:57:42 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.createUser(..) with args: [com.userservice.entity.User@fbf9d06]
2025-06-07 14:57:42 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.createUser(..) | Execution time: 4 ms | Response: <400 BAD_REQUEST Bad Request,User already exists with this email id,[]>
2025-06-07 14:58:00 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=null, password=172839)]
2025-06-07 14:58:09 INFO  c.userservice.config.LoggingAspect - ➡️ Entering AuthController.login(..) with args: [JwtRequest(email=merchant2@example.com, password=172839)]
2025-06-07 14:58:10 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting AuthController.login(..) | Execution time: 500 ms | Response: <200 OK OK,JwtResponse(jwtToken=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUk9MRV9NRVJDSEFOVCIsInN1YiI6Im1lcmNoYW50MkBleGFtcGxlLmNvbSIsImlhdCI6MTc0OTI4ODQ5MCwiZXhwIjoxNzQ5MzA2NDkwfQ.rBQPsgCSd4dGd-CkVY8Fmdkc5dTBBDEME0dsgFMqK6M, role=MERCHANT),[]>
2025-06-07 14:58:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:03:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:08:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:13:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:18:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:23:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:28:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:33:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:35:55 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 15:35:55 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 19 ms | Response: com.userservice.entity.User@294b6cd5
2025-06-07 15:36:24 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 15:36:24 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 3 ms | Response: com.userservice.entity.User@2b119dca
2025-06-07 15:36:56 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 15:36:56 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 2 ms | Response: com.userservice.entity.User@35375cca
2025-06-07 15:38:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:42:36 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 15:42:36 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 2 ms | Response: com.userservice.entity.User@4f83e6c
2025-06-07 15:43:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:45:17 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 15:45:17 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 5 ms | Response: com.userservice.entity.User@7ced7111
2025-06-07 15:48:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:53:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:58:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 15:59:23 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [anonymousUser]
2025-06-07 15:59:23 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 6 ms | Response: null
2025-06-07 16:03:06 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 16:03:06 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 4 ms | Response: com.userservice.entity.User@2a873b37
2025-06-07 16:03:06 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getAddress(..) with args: [7]
2025-06-07 16:03:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:06:00 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getAddress(..) with args: [7]
2025-06-07 16:08:45 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:12:52 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application USERSERVICE with eureka with status DOWN
2025-06-07 16:12:52 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749292972271, current=DOWN, previous=UP]
2025-06-07 16:12:52 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 16:12:52 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-07 16:12:52 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 16:12:52 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-07 16:12:52 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 16:12:52 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-07 16:12:52 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-07 16:12:52 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-07 16:12:55 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-07 16:12:55 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - deregister  status: 200
2025-06-07 16:12:55 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-07 16:12:59 INFO  c.userservice.UserServiceApplication - Starting UserServiceApplication using Java 21.0.6 with PID 12128 (C:\Users\rajgu\OneDrive\Desktop\E-Shop-master\UserService\target\classes started by rajgu in C:\Users\rajgu\OneDrive\Desktop\E-Shop-master)
2025-06-07 16:12:59 INFO  c.userservice.UserServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-07 16:13:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-07 16:13:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 138 ms. Found 2 JPA repository interfaces.
2025-06-07 16:13:01 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a249ecd-0543-3fb7-b786-a1b5399002f7
2025-06-07 16:13:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8001 (http)
2025-06-07 16:13:01 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2025-06-07 16:13:01 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-07 16:13:01 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-07 16:13:01 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-07 16:13:01 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2319 ms
2025-06-07 16:13:02 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-07 16:13:02 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-07 16:13:02 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-07 16:13:02 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-07 16:13:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-07 16:13:03 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@362b384c
2025-06-07 16:13:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-07 16:13:03 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-07 16:13:03 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-07 16:13:04 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-07 16:13:04 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-07 16:13:04 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-07 16:13:04 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-07 16:13:04 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-07 16:13:05 INFO  o.s.c.o.FeignClientFactoryBean - For 'NOTIFICATIONSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 16:13:05 INFO  o.s.c.o.FeignClientFactoryBean - For 'ORDERSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 16:13:05 INFO  o.s.c.o.FeignClientFactoryBean - For 'CARTSERVICE' URL not provided. Will try picking an instance via load-balancing.
2025-06-07 16:13:05 INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-07 16:13:06 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-06-07 16:13:06 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-06-07 16:13:06 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-07 16:13:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-07 16:13:06 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1749292986710 with initial instances count: 6
2025-06-07 16:13:06 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application USERSERVICE with eureka with status UP
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1749292986718, current=UP, previous=STARTING]
2025-06-07 16:13:06 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001: registering service...
2025-06-07 16:13:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8001 (http) with context path '/'
2025-06-07 16:13:06 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8001
2025-06-07 16:13:06 INFO  c.userservice.UserServiceApplication - Started UserServiceApplication in 7.923 seconds (process running for 8.559)
2025-06-07 16:13:06 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERSERVICE/Aditya:UserService:8001 - registration status: 204
2025-06-07 16:14:01 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-07 16:14:01 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-07 16:14:01 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-07 16:14:01 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getAddress(..) with args: [7]
2025-06-07 16:14:06 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.addAddress(..) with args: [7, com.userservice.entity.Address@fc906a6]
2025-06-07 16:14:06 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.addAddress(..) | Execution time: 53 ms | Response: <200 OK OK,com.userservice.entity.Address@fc906a6,[]>
2025-06-07 16:15:11 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 16:15:11 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 126 ms | Response: com.userservice.entity.User@738cb594
2025-06-07 16:15:11 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getAddress(..) with args: [7]
2025-06-07 16:15:11 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getAddress(..) | Execution time: 4 ms | Response: <200 OK OK,AddressDTO(addressId=2, street=221B Baker Street, city=London, state=Greater London, country=UK, zipCode=12345),[]>
2025-06-07 16:18:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:23:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:28:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:33:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:38:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:43:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:48:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:53:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:54:13 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 16:54:13 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 20 ms | Response: com.userservice.entity.User@250a8eac
2025-06-07 16:54:13 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getAddress(..) with args: [7]
2025-06-07 16:54:13 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getAddress(..) | Execution time: 4 ms | Response: <200 OK OK,AddressDTO(addressId=2, street=221B Baker Street, city=London, state=Greater London, country=UK, zipCode=12345),[]>
2025-06-07 16:57:00 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 16:57:00 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 4 ms | Response: com.userservice.entity.User@1a9f1902
2025-06-07 16:57:00 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getAddress(..) with args: [7]
2025-06-07 16:57:00 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getAddress(..) | Execution time: 3 ms | Response: <200 OK OK,AddressDTO(addressId=2, street=221B Baker Street, city=London, state=Greater London, country=UK, zipCode=12345),[]>
2025-06-07 16:58:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 16:58:25 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getUserByEmailId(..) with args: [merchant2@example.com]
2025-06-07 16:58:25 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getUserByEmailId(..) | Execution time: 3 ms | Response: com.userservice.entity.User@75d84da9
2025-06-07 16:58:25 INFO  c.userservice.config.LoggingAspect - ➡️ Entering UserController.getAddress(..) with args: [7]
2025-06-07 16:58:25 INFO  c.userservice.config.LoggingAspect - ⬅️ Exiting UserController.getAddress(..) | Execution time: 3 ms | Response: <200 OK OK,AddressDTO(addressId=2, street=221B Baker Street, city=London, state=Greater London, country=UK, zipCode=12345),[]>
2025-06-07 17:03:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-07 19:26:37 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h22m33s626ms208µs100ns).
